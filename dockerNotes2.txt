==================================
DOCKER FLOW 1 : IMAGE -> CONTAINER
==================================

docker images (imageName:tag, or imageId)

Image --> docker run --> turns image into a running container, with a running process

docker run -it ubuntu:latest bash (terminal interactive)

cat /etc/lsb-release (Ubuntu distro information)

exit a running -it bash container: "exit" or Ctrl+D

docker ps (view running containers)

Image: a fixed point, where status is known, and you can always start from

==================================
DOCKER FLOW 2 : CONTAINER -> IMAGE
==================================

docker ps -a (lists all containers, including stopped)
docker ps -l (lists the last exited container)

- STATUS: Exited (0) .... exit code can be useful for diagnostics

docker commit: creates an image from a stopped container
docker image ls (docker images)

docker tag imageId my-image-name
docker image ls - will now see new iamge name under REPOSITORY

docker commit <containerName> <newImageName> --shortcut that rolls docker tag into docker commit

==================================
RUNNING THINGS IN DOCKER
==================================

docker run
- starts a container from an image, with a process
- containers have a main process.  when this process stops, the container stops

docker run --rm (delete this container when the process exits)
-skips the docker rm containerName step after a container stops

passing multiple commands to a container's bash: (semicolon separates "first do this, THEN do this")

docker run -ti ubuntu bash -c "sleep 3; echo all done"













